// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskTracker.Data;

namespace TaskTracker.Data.Migrations
{
    [DbContext(typeof(TaskTrackerContext))]
    [Migration("20220709183403_DbAutogenerateIdsForNewEntities")]
    partial class DbAutogenerateIdsForNewEntities
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TaskTracker.Data.Models.Project", b =>
                {
                    b.Property<Guid>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime>("CompletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Priority")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)1);

                    b.HasKey("ProjectId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            ProjectId = new Guid("32504d45-34a0-4315-ab00-99caad137b8e"),
                            CompletionDate = new DateTime(2022, 7, 7, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Project1",
                            Priority = 1,
                            StartDate = new DateTime(2022, 7, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = (byte)1
                        },
                        new
                        {
                            ProjectId = new Guid("c2870df6-f1ab-4524-bd9c-75ec47721352"),
                            CompletionDate = new DateTime(2022, 7, 8, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Project2",
                            Priority = 2,
                            StartDate = new DateTime(2022, 7, 2, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = (byte)1
                        },
                        new
                        {
                            ProjectId = new Guid("c2f3eab5-ed1f-474f-add4-b6d14cf69564"),
                            CompletionDate = new DateTime(2022, 7, 9, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Project3",
                            Priority = 3,
                            StartDate = new DateTime(2022, 7, 3, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = (byte)1
                        });
                });

            modelBuilder.Entity("TaskTracker.Data.Models.Task", b =>
                {
                    b.Property<Guid>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(600)
                        .HasColumnType("nvarchar(600)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Priority")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)1);

                    b.HasKey("TaskId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            TaskId = new Guid("2ac3dd2a-261f-4b91-9c09-fa1622cbe192"),
                            Description = "Description for Task1",
                            Name = "Task1",
                            Priority = 1,
                            ProjectId = new Guid("32504d45-34a0-4315-ab00-99caad137b8e"),
                            Status = (byte)1
                        },
                        new
                        {
                            TaskId = new Guid("2ee99086-6031-4624-b891-034ff894c247"),
                            Description = "Description for Task2",
                            Name = "Task2",
                            Priority = 1,
                            ProjectId = new Guid("32504d45-34a0-4315-ab00-99caad137b8e"),
                            Status = (byte)1
                        },
                        new
                        {
                            TaskId = new Guid("51f1f31d-1c1f-4b8a-b982-35c73bf5a59a"),
                            Description = "Description for Task3",
                            Name = "Task3",
                            Priority = 1,
                            ProjectId = new Guid("c2870df6-f1ab-4524-bd9c-75ec47721352"),
                            Status = (byte)1
                        },
                        new
                        {
                            TaskId = new Guid("aa63cc96-b539-4d5b-8de2-bb9dbb36cab6"),
                            Description = "Description for Task4",
                            Name = "Task4",
                            Priority = 1,
                            ProjectId = new Guid("c2870df6-f1ab-4524-bd9c-75ec47721352"),
                            Status = (byte)1
                        },
                        new
                        {
                            TaskId = new Guid("612ba24a-f8ac-410e-8343-40af1faab47a"),
                            Description = "Description for Task5",
                            Name = "Task5",
                            Priority = 1,
                            ProjectId = new Guid("c2870df6-f1ab-4524-bd9c-75ec47721352"),
                            Status = (byte)1
                        },
                        new
                        {
                            TaskId = new Guid("a0cce7c0-26f0-4379-9f10-c96912cb12bb"),
                            Description = "Description for Task6",
                            Name = "Task6",
                            Priority = 1,
                            ProjectId = new Guid("c2f3eab5-ed1f-474f-add4-b6d14cf69564"),
                            Status = (byte)1
                        });
                });

            modelBuilder.Entity("TaskTracker.Data.Models.Task", b =>
                {
                    b.HasOne("TaskTracker.Data.Models.Project", "Project")
                        .WithMany("Tasks")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("TaskTracker.Data.Models.Project", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
